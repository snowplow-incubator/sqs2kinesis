name: CD

on:
  push:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v5

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - run: sbt clean test

  publish_github:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v5

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Get current version
        id: ver
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Assemble fat jar
        run: sbt "set assembly / test := {}; assembly"

      - name: Create GitHub release and attach artifacts
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: ${{ contains(steps.ver.outputs.tag, 'rc') }}
          name: Version ${{ steps.ver.outputs.tag }}
          tag_name: ${{ steps.ver.outputs.tag }}
          files: |
            target/scala-2.13/sqs2kinesis-${{ steps.ver.outputs.tag }}.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_docker:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v5

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Get current version
        id: ver
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Stage the Docker build
        run: sbt docker:stage

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: snowplow/sqs2kinesis
          tags: |
            type=raw,value=latest,enable=${{ !contains(steps.ver.outputs.tag, 'rc') }}
            type=raw,value=${{ steps.ver.outputs.tag }}
          flavor: |
            latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image
        uses: docker/build-push-action@v2
        with:
          context: target/docker/stage
          file: target/docker/stage/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          push: true
